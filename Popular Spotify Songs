{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":7772190,"sourceType":"datasetVersion","datasetId":4543007}],"dockerImageVersionId":30673,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/argada/popular-spotify-songs-eda?scriptVersionId=173911435\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"markdown","source":"### Section 0: Data Loading\n**Objective**: Introduce the dataset and load it for initial examination. <br>\n**Tasks**: Address encoding issues while reading the CSV file. Load the dataset and display basic information, including the number of entries and columns. <br>\n**Outputs**: Data frame information indicating 953 entries across 24 features.\n\n### Section 1: Data Cleaning\n**Objective** : Clean the dataset to ensure quality analysis. <br>\n**Tasks**: Handle non-numeric values in columns like 'streams' and 'in_deezer_playlists'.\nAddress missing values in 'in_shazam_charts' and 'key' columns. <br>\n**Outputs**: Cleaned dataset ready for analysis.\n\n### Section 2: Univariate Visualization\n**Objective**: Visualize distribution of individual features. <br>\n**Tasks**: Plot histograms for features such as artist count, BPM, key, mode, and various percentages (danceability, valence, energy, etc.). Use specific color palettes for visual consistency. <br>\n**Outputs**: Histograms showcasing the distribution of various features.\n\n<img src=\"https://i.postimg.cc/PJNWSW-tN/results-22-0.png\" width=\"600\"/>\n\n### Section 3: Bivariate Visualizations\n**Objective**: Explore relationships between pairs of variables.<br>\n**Tasks**: Generate scatter plots to examine the relationships between streams and other numerical features. Visualize the distribution of streams across different modes using displot. <br>\n**Outputs**: Visual insights into how different features relate to each other.\n\n<img src=\"https://i.postimg.cc/tg5FySJY/results-34-1.png\" width=\"600\"/>\n\n### Section 4: Data Clustering\n**Objective**: Group songs into clusters based on their features to identify patterns.<br>\n**Tasks**: Use Factor Analysis of Mixed Data (FAMD) to reduce dimensionality.\nApply K-means clustering to the reduced dimensions and assign songs to clusters.\nVisualize clustering results using pair plots for different sets of features. <br>\n**Outputs**: Clusters of songs based on their similarities across multiple features, visualized through pair plots.\n\n<img src=\"https://i.postimg.cc/j2G7vBgk/results-44-1.png\" width=\"600\"/>","metadata":{}},{"cell_type":"code","source":"import numpy as np \nimport pandas as pd \nimport os\nimport matplotlib.pyplot as plt\nimport matplotlib.colors as mcolors\nimport seaborn as sns\n\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-04-25T10:02:26.692571Z","iopub.execute_input":"2024-04-25T10:02:26.692956Z","iopub.status.idle":"2024-04-25T10:02:30.537488Z","shell.execute_reply.started":"2024-04-25T10:02:26.692925Z","shell.execute_reply":"2024-04-25T10:02:30.536155Z"},"trusted":true},"execution_count":1,"outputs":[{"name":"stdout","text":"/kaggle/input/spotify-music/Popular_Spotify_Songs.csv\n/kaggle/input/pics-for-bike-note/__results___80_0.png\n/kaggle/input/pics-for-bike-note/__results___79_0.png\n/kaggle/input/pics-for-bike-note/__results___22_0.png\n/kaggle/input/pics-for-bike-note/__results___78_0.png\n/kaggle/input/pics-for-bike-note/__results___43_0.png\n/kaggle/input/pics-for-bike-note/__results___33_0.png\n/kaggle/input/pics-for-bike-note/__results___60_4.png\n/kaggle/input/pics-for-bike-note/__results___34_1.png\n/kaggle/input/pics-for-bike-note/__results___60_5.png\n/kaggle/input/pics-for-bike-note/__results___32_0.png\n/kaggle/input/pics-for-bike-note/__results___44_1.png\n","output_type":"stream"}]},{"cell_type":"code","source":"try:\n    songs_df = pd.read_csv('/kaggle/input/spotify-music/Popular_Spotify_Songs.csv')\n    print(\"\\nData info:\")\n    print(songs_df.info())\nexcept Exception as e:\n    print(\"Error reading CSV file:\", e)","metadata":{"execution":{"iopub.status.busy":"2024-04-09T15:04:40.926094Z","iopub.execute_input":"2024-04-09T15:04:40.926696Z","iopub.status.idle":"2024-04-09T15:04:40.948752Z","shell.execute_reply.started":"2024-04-09T15:04:40.926659Z","shell.execute_reply":"2024-04-09T15:04:40.947551Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"try:\n    songs_df = pd.read_csv(\"/kaggle/input/spotify-music/Popular_Spotify_Songs.csv\" , encoding = 'latin-1')\n    print(\"\\nData info:\")\n    print(songs_df.info())\nexcept Exception as e:\n    print(\"Error reading CSV file:\", e)","metadata":{"execution":{"iopub.status.busy":"2024-04-09T15:04:40.950197Z","iopub.execute_input":"2024-04-09T15:04:40.950773Z","iopub.status.idle":"2024-04-09T15:04:41.001925Z","shell.execute_reply.started":"2024-04-09T15:04:40.950716Z","shell.execute_reply":"2024-04-09T15:04:41.000836Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# EDA","metadata":{}},{"cell_type":"code","source":"songs_df.sample(10)","metadata":{"execution":{"iopub.status.busy":"2024-04-09T15:04:41.004722Z","iopub.execute_input":"2024-04-09T15:04:41.005148Z","iopub.status.idle":"2024-04-09T15:04:41.050683Z","shell.execute_reply.started":"2024-04-09T15:04:41.005115Z","shell.execute_reply":"2024-04-09T15:04:41.049247Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"songs_df.describe(include='object')","metadata":{"execution":{"iopub.status.busy":"2024-04-09T15:04:41.052434Z","iopub.execute_input":"2024-04-09T15:04:41.052968Z","iopub.status.idle":"2024-04-09T15:04:41.08682Z","shell.execute_reply.started":"2024-04-09T15:04:41.052922Z","shell.execute_reply":"2024-04-09T15:04:41.085594Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"songs_df.describe(include='int64')","metadata":{"execution":{"iopub.status.busy":"2024-04-09T15:04:41.088528Z","iopub.execute_input":"2024-04-09T15:04:41.088895Z","iopub.status.idle":"2024-04-09T15:04:41.166021Z","shell.execute_reply.started":"2024-04-09T15:04:41.088865Z","shell.execute_reply":"2024-04-09T15:04:41.164562Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"songs_df.isna().sum()","metadata":{"execution":{"iopub.status.busy":"2024-04-09T15:04:41.167434Z","iopub.execute_input":"2024-04-09T15:04:41.167843Z","iopub.status.idle":"2024-04-09T15:04:41.179369Z","shell.execute_reply.started":"2024-04-09T15:04:41.1678Z","shell.execute_reply":"2024-04-09T15:04:41.178046Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":" songs_df[['in_shazam_charts', 'key']][songs_df.isna().any(axis=1)]","metadata":{"execution":{"iopub.status.busy":"2024-04-09T15:04:41.181914Z","iopub.execute_input":"2024-04-09T15:04:41.182422Z","iopub.status.idle":"2024-04-09T15:04:41.205671Z","shell.execute_reply.started":"2024-04-09T15:04:41.182378Z","shell.execute_reply":"2024-04-09T15:04:41.204112Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"songs_df.loc[~songs_df['streams'].str.isnumeric()]","metadata":{"execution":{"iopub.status.busy":"2024-04-09T15:04:41.207591Z","iopub.execute_input":"2024-04-09T15:04:41.208203Z","iopub.status.idle":"2024-04-09T15:04:41.23586Z","shell.execute_reply.started":"2024-04-09T15:04:41.208104Z","shell.execute_reply":"2024-04-09T15:04:41.234385Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"songs_df.loc[~songs_df['in_deezer_playlists'].str.isnumeric(), 'in_deezer_playlists']","metadata":{"execution":{"iopub.status.busy":"2024-04-09T15:04:41.242626Z","iopub.execute_input":"2024-04-09T15:04:41.243212Z","iopub.status.idle":"2024-04-09T15:04:41.255366Z","shell.execute_reply.started":"2024-04-09T15:04:41.243156Z","shell.execute_reply":"2024-04-09T15:04:41.253867Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Data cleanning","metadata":{}},{"cell_type":"code","source":"songs_df['streams'] = pd.to_numeric(songs_df['streams'], errors='coerce')\nsongs_df['streams'] = songs_df['streams'].fillna(0).astype(int)\nsongs_df['in_deezer_playlists'] = songs_df['in_deezer_playlists'].str.replace(',', '').astype(float)\nsongs_df['in_shazam_charts'] = songs_df['in_shazam_charts'].str.replace(',', '').astype(float).fillna(0)\nsongs_df['key'] = songs_df['key'].fillna(\"Missing\")","metadata":{"execution":{"iopub.status.busy":"2024-04-09T15:04:41.256793Z","iopub.execute_input":"2024-04-09T15:04:41.257363Z","iopub.status.idle":"2024-04-09T15:04:41.27597Z","shell.execute_reply.started":"2024-04-09T15:04:41.257328Z","shell.execute_reply":"2024-04-09T15:04:41.27445Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Visualisation ","metadata":{}},{"cell_type":"code","source":"colors_sp = ['#000000', '#072A13', '#0D5326', '#147D39', '#1aa64b', \"#1db954\", '#33c065', '#4ac776'] # Extend Spotify Nights Color Palette https://www.color-hex.com/color-palette/85894\nl_colors = len(colors_sp) \ncolors_wm = ['#FFD700', '#C1BEBC', '#DB6F2A']","metadata":{"execution":{"iopub.status.busy":"2024-04-09T15:04:41.277596Z","iopub.execute_input":"2024-04-09T15:04:41.278175Z","iopub.status.idle":"2024-04-09T15:04:41.29277Z","shell.execute_reply.started":"2024-04-09T15:04:41.278126Z","shell.execute_reply":"2024-04-09T15:04:41.291131Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Univariate visualization","metadata":{}},{"cell_type":"code","source":"import warnings\nwarnings.filterwarnings(\"ignore\", \"is_categorical_dtype\")\nwarnings.filterwarnings(\"ignore\", \"use_inf_as_na\")\n\ndef plotting_uni(df, cols, bin_size = None, col_size = 7):\n    nrows = (len(cols) -1) // col_size + 1  \n    ncols = min(len(cols), col_size)\n    fig, axes = plt.subplots(nrows=nrows, ncols=ncols, figsize=(4*ncols, 4*nrows))\n    axes = axes.flatten()\n\n    for i, c in enumerate(cols):\n        sns.histplot(df[c], color=colors_sp[(1+i) % l_colors], ax=axes[i], binwidth=bin_size)\n        axes[i].set_title(f'Distribution of \"{c}\"')\n        axes[i].set_xlabel(c)\n        axes[i].set_ylabel('Frequency')\n        if df[c].dtype != object:\n            mean_value = df[c].mean()\n            median_value = df[c].median()\n            std_value = df[c].std()\n            if mean_value > 100*median_value:\n                axes[i].set_yscale('log')\n            summary_text = f\"Mean: {mean_value:.2f}\\nMedian: {median_value:.2f}\\nStd: {std_value:.2f}\"\n            axes[i].text(0.75, 0.8, summary_text, transform=axes[i].transAxes, fontsize=10, verticalalignment='baseline',\n                        bbox=dict(boxstyle='round', facecolor='white', alpha=0.7))\n            #text.get_bbox_patch().set_alpha(0.5)\n\n    plt.tight_layout()\n    plt.show()","metadata":{"execution":{"iopub.status.busy":"2024-04-09T15:04:41.297137Z","iopub.execute_input":"2024-04-09T15:04:41.297972Z","iopub.status.idle":"2024-04-09T15:04:41.315641Z","shell.execute_reply.started":"2024-04-09T15:04:41.297913Z","shell.execute_reply":"2024-04-09T15:04:41.314166Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"name_col = ['track_name', 'artist(s)_name']\ncategory_col = ['artist_count', 'bpm', 'key', 'mode']\ndate_col = ['released_year', 'released_month', 'released_day']\nin_and_str_col = ['in_spotify_playlists', 'in_spotify_charts', 'streams',\n                  'in_apple_playlists', 'in_apple_charts', 'in_deezer_playlists', \n                  'in_deezer_charts', 'in_shazam_charts']\npersent_char = ['danceability_%', 'valence_%', 'energy_%', 'acousticness_%',\n                'instrumentalness_%', 'liveness_%', 'speechiness_%']","metadata":{"execution":{"iopub.status.busy":"2024-04-09T15:04:41.317221Z","iopub.execute_input":"2024-04-09T15:04:41.317629Z","iopub.status.idle":"2024-04-09T15:04:41.337229Z","shell.execute_reply.started":"2024-04-09T15:04:41.317582Z","shell.execute_reply":"2024-04-09T15:04:41.33579Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"plotting_uni(songs_df, persent_char)","metadata":{"execution":{"iopub.status.busy":"2024-04-09T15:04:41.33897Z","iopub.execute_input":"2024-04-09T15:04:41.339605Z","iopub.status.idle":"2024-04-09T15:04:44.272507Z","shell.execute_reply.started":"2024-04-09T15:04:41.339565Z","shell.execute_reply":"2024-04-09T15:04:44.271212Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"plotting_uni(songs_df, category_col)","metadata":{"execution":{"iopub.status.busy":"2024-04-09T15:04:44.274379Z","iopub.execute_input":"2024-04-09T15:04:44.275108Z","iopub.status.idle":"2024-04-09T15:04:45.530202Z","shell.execute_reply.started":"2024-04-09T15:04:44.275057Z","shell.execute_reply":"2024-04-09T15:04:45.526775Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"plotting_uni(songs_df, date_col, bin_size = 1)","metadata":{"execution":{"iopub.status.busy":"2024-04-09T15:04:45.531767Z","iopub.execute_input":"2024-04-09T15:04:45.532164Z","iopub.status.idle":"2024-04-09T15:04:46.808385Z","shell.execute_reply.started":"2024-04-09T15:04:45.532131Z","shell.execute_reply":"2024-04-09T15:04:46.807312Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"plotting_uni(songs_df, in_and_str_col, col_size = 4)","metadata":{"execution":{"iopub.status.busy":"2024-04-09T15:04:46.80963Z","iopub.execute_input":"2024-04-09T15:04:46.810001Z","iopub.status.idle":"2024-04-09T15:04:51.175451Z","shell.execute_reply.started":"2024-04-09T15:04:46.809971Z","shell.execute_reply":"2024-04-09T15:04:51.17402Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"data = songs_df.sort_values(by='streams', ascending=False).head(10)\n\ntrack_artists = data['track_name'].apply(lambda x: x[:24] if len(x) > 25 else x) + \" - \\n\" + data['artist(s)_name']\nstreams = data['streams']\n\nsns.set_style(\"whitegrid\", {\"grid.color\": \"green\", \"grid.linestyle\": \":\"})\nsns.set_palette(\"dark:green\")\n\nplt.figure(figsize=(12, 6))\nsns.barplot(x=track_artists, y=streams, palette= colors_wm + colors_sp, saturation=1)\nplt.ylabel('Streams', color=colors_sp[1])\n\nplt.title('Top 10 Tracks by Spotfy Streams', color=colors_sp[1])\nplt.xticks(rotation=45, ha='center', color=colors_sp[1]) \nplt.tight_layout()  \nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-04-09T15:04:51.17714Z","iopub.execute_input":"2024-04-09T15:04:51.17764Z","iopub.status.idle":"2024-04-09T15:04:51.850923Z","shell.execute_reply.started":"2024-04-09T15:04:51.177604Z","shell.execute_reply":"2024-04-09T15:04:51.849638Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"data = songs_df.sort_values(by='in_spotify_playlists', ascending=False).head(10)\n\ntrack_artists = data['track_name'].apply(lambda x: x[:24] if len(x) > 25 else x) \ntrack_artists += \" - \\n\" \ntrack_artists += data['artist(s)_name'].apply(lambda x: x[:24] if len(x) > 25 else x)\nstreams = data['in_spotify_playlists']\n\nsns.set_style(\"whitegrid\", {\"grid.color\": \"green\", \"grid.linestyle\": \":\"})\nsns.set_palette(\"dark:green\")\n\nplt.figure(figsize=(10, 6))\nsns.barplot(x=track_artists, y=streams, palette= colors_wm + colors_sp, saturation=1)\nplt.ylabel('Number of Playlists ', color=colors_sp[1])\nplt.xlabel('')\nplt.title('Top 10 Tracks by Appearance in Spotfy Playlists', color=colors_sp[1])\nplt.xticks(rotation=45, ha='center', color=colors_sp[1]) \nplt.tight_layout()  \nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-04-09T15:04:51.85307Z","iopub.execute_input":"2024-04-09T15:04:51.853827Z","iopub.status.idle":"2024-04-09T15:04:52.438695Z","shell.execute_reply.started":"2024-04-09T15:04:51.853789Z","shell.execute_reply":"2024-04-09T15:04:52.437078Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"data = songs_df.sort_values(by='in_spotify_charts', ascending=False).head(10)\n\ntrack_artists = data['track_name'].apply(lambda x: x[:24] if len(x) > 25 else x) \ntrack_artists += \" - \\n\" \ntrack_artists += data['artist(s)_name'].apply(lambda x: x[:24] if len(x) > 25 else x)\nstreams = data['in_spotify_charts']\n\nsns.set_style(\"whitegrid\", {\"grid.color\": \"green\", \"grid.linestyle\": \":\"})\nsns.set_palette(\"dark:green\")\n\nplt.figure(figsize=(10, 6))\nsns.barplot(x=track_artists, y=streams, palette= colors_wm + colors_sp, saturation=1)\nplt.ylabel('Number of Charts', color=colors_sp[1])\nplt.xlabel('')\nplt.title('Top 10 Tracks by Appearance in Spotfy Charts', color=colors_sp[1])\nplt.xticks(rotation=45, ha='center', color=colors_sp[1]) \nplt.tight_layout()  \nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-04-09T15:04:52.440368Z","iopub.execute_input":"2024-04-09T15:04:52.440794Z","iopub.status.idle":"2024-04-09T15:04:52.969807Z","shell.execute_reply.started":"2024-04-09T15:04:52.44075Z","shell.execute_reply":"2024-04-09T15:04:52.9686Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from collections import defaultdict\n\nartist_count = defaultdict(int)\n\nfor _, row in songs_df.iterrows():\n    artists = [artist.strip() for artist in row['artist(s)_name'].split(',')]\n    for artist in artists:\n        artist_count[artist] += 1\n\nartist_count_df = pd.DataFrame(list(artist_count.items()), columns=['Artist', 'Songs'])\nartist_count_df = artist_count_df.sort_values(by='Songs', ascending=False)","metadata":{"execution":{"iopub.status.busy":"2024-04-09T15:04:52.971212Z","iopub.execute_input":"2024-04-09T15:04:52.971558Z","iopub.status.idle":"2024-04-09T15:04:53.055542Z","shell.execute_reply.started":"2024-04-09T15:04:52.97153Z","shell.execute_reply":"2024-04-09T15:04:53.054141Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"data = artist_count_df.head(10)\n\nartist = data['Artist']\nsongs = data['Songs']\n\nsns.set_style(\"whitegrid\", {\"grid.color\": \"green\", \"grid.linestyle\": \":\"})\nsns.set_palette(\"dark:green\")\n\nplt.figure(figsize=(10, 6))\nsns.barplot(x=artist, y=songs, palette= colors_wm + colors_sp, saturation=1)\nplt.ylabel('Number of Popular Songs', color=colors_sp[1])\nplt.xlabel('')\nplt.title('Top 10 Artist by the Number of Popular Songs', color=colors_sp[1])\nplt.xticks(rotation=45, ha='center', color=colors_sp[1]) \nplt.tight_layout()  \nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-04-09T15:04:53.057225Z","iopub.execute_input":"2024-04-09T15:04:53.057602Z","iopub.status.idle":"2024-04-09T15:04:53.536789Z","shell.execute_reply.started":"2024-04-09T15:04:53.057569Z","shell.execute_reply":"2024-04-09T15:04:53.535274Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"warnings.filterwarnings(\"ignore\", message=\"When grouping with a length-1 list-like*\")\nsns.displot(data=songs_df, \n            x='streams',\n            col='mode',\n            color = colors_sp[1]\n           )","metadata":{"execution":{"iopub.status.busy":"2024-04-09T15:04:53.538547Z","iopub.execute_input":"2024-04-09T15:04:53.539036Z","iopub.status.idle":"2024-04-09T15:04:55.056123Z","shell.execute_reply.started":"2024-04-09T15:04:53.538992Z","shell.execute_reply":"2024-04-09T15:04:55.054923Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"songs_df.columns","metadata":{"execution":{"iopub.status.busy":"2024-04-09T15:04:55.057709Z","iopub.execute_input":"2024-04-09T15:04:55.058606Z","iopub.status.idle":"2024-04-09T15:04:55.06771Z","shell.execute_reply.started":"2024-04-09T15:04:55.058562Z","shell.execute_reply":"2024-04-09T15:04:55.066368Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Bivariate visualizations","metadata":{}},{"cell_type":"code","source":"songs_df['int_date'] = pd.to_datetime({'year': songs_df['released_year'], 'month': songs_df['released_month'], 'day': songs_df['released_day']})\nsongs_df['int_date'] = songs_df['int_date'].view('int')","metadata":{"execution":{"iopub.status.busy":"2024-04-09T15:04:55.069586Z","iopub.execute_input":"2024-04-09T15:04:55.069992Z","iopub.status.idle":"2024-04-09T15:04:55.092993Z","shell.execute_reply.started":"2024-04-09T15:04:55.069958Z","shell.execute_reply":"2024-04-09T15:04:55.091647Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"corr_cal = ['artist_count', 'int_date',  'streams','in_spotify_playlists', \n            'in_apple_playlists', 'in_deezer_playlists', 'in_spotify_charts',\n            'in_apple_charts', 'in_deezer_charts', 'in_shazam_charts', \n            'danceability_%', 'valence_%', 'energy_%', 'acousticness_%',\n            'instrumentalness_%', 'liveness_%', 'speechiness_%', 'bpm']","metadata":{"execution":{"iopub.status.busy":"2024-04-09T15:04:55.094214Z","iopub.execute_input":"2024-04-09T15:04:55.094575Z","iopub.status.idle":"2024-04-09T15:04:55.112272Z","shell.execute_reply.started":"2024-04-09T15:04:55.094547Z","shell.execute_reply":"2024-04-09T15:04:55.111048Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"sns.cubehelix_palette(start=2, rot=0, dark=0, light=.95, reverse=True, as_cmap=True)\n\ncorrelation_matrix = songs_df[corr_cal].corr() \nfig, ax = plt.subplots(figsize=(20, 20))\nsns.heatmap(correlation_matrix, annot=True, vmin=-1, vmax=1, cmap=sns.color_palette(\"icefire\", as_cmap=True)) # annot=True,\nplt.title(\"Correlation Matrix\")\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-04-09T15:04:55.118687Z","iopub.execute_input":"2024-04-09T15:04:55.119836Z","iopub.status.idle":"2024-04-09T15:04:57.176852Z","shell.execute_reply.started":"2024-04-09T15:04:55.119785Z","shell.execute_reply":"2024-04-09T15:04:57.175365Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"most_st = songs_df.sort_values(by='streams', ascending=False).head(35)\nmost_st = most_st.set_index('track_name')","metadata":{"execution":{"iopub.status.busy":"2024-04-09T15:04:57.178851Z","iopub.execute_input":"2024-04-09T15:04:57.179236Z","iopub.status.idle":"2024-04-09T15:04:57.194666Z","shell.execute_reply.started":"2024-04-09T15:04:57.179198Z","shell.execute_reply":"2024-04-09T15:04:57.192358Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"long_col = ['#147d39', '#258647', '#369055', '#469963', '#57a272', \n            '#68ab80', '#79b58e', '#8abe9c', '#9ac7aa', '#abd1b8',\n            '#bcdac6', '#cde3d5', '#ddece3', '#eef6f1', '#ffffff']\n\nlut = dict(zip(most_st['mode'].unique(), [colors_sp[2], colors_sp[4]]))\nlut2 = dict(zip(most_st['key'].unique(), long_col))\n\nrow_colors = pd.DataFrame({'mode':most_st['mode'].map(lut),\n                          'key':most_st['key'].map(lut2)})\nsns.clustermap(most_st[['danceability_%', 'valence_%', 'energy_%', 'acousticness_%', \n                        'liveness_%', 'speechiness_%']], row_colors=row_colors, \n               cmap=sns.color_palette(\"icefire\", as_cmap=True), metric=\"correlation\", method=\"single\")","metadata":{"execution":{"iopub.status.busy":"2024-04-09T15:04:57.196758Z","iopub.execute_input":"2024-04-09T15:04:57.197289Z","iopub.status.idle":"2024-04-09T15:04:58.930811Z","shell.execute_reply.started":"2024-04-09T15:04:57.197251Z","shell.execute_reply":"2024-04-09T15:04:58.929499Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Data clustering (FAMD)\n","metadata":{}},{"cell_type":"code","source":"pip install prince","metadata":{"execution":{"iopub.status.busy":"2024-04-09T15:04:58.932402Z","iopub.execute_input":"2024-04-09T15:04:58.932784Z","iopub.status.idle":"2024-04-09T15:05:17.714929Z","shell.execute_reply.started":"2024-04-09T15:04:58.932743Z","shell.execute_reply":"2024-04-09T15:05:17.713172Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import prince\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score \nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.cluster import KMeans\nfrom sklearn.metrics import silhouette_score\nfrom sklearn.preprocessing import StandardScaler","metadata":{"execution":{"iopub.status.busy":"2024-04-09T15:05:17.717526Z","iopub.execute_input":"2024-04-09T15:05:17.718068Z","iopub.status.idle":"2024-04-09T15:05:19.480785Z","shell.execute_reply.started":"2024-04-09T15:05:17.718018Z","shell.execute_reply":"2024-04-09T15:05:19.479462Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"songs_df['key'] = songs_df['key'].astype('category')\nsongs_df['mode'] = songs_df['mode'].astype('category')\nfor i in songs_df.columns:\n    if songs_df[i].dtype == \"int64\":\n        songs_df[i] = songs_df[i].astype('float64')","metadata":{"execution":{"iopub.status.busy":"2024-04-09T15:05:19.482679Z","iopub.execute_input":"2024-04-09T15:05:19.483312Z","iopub.status.idle":"2024-04-09T15:05:19.510349Z","shell.execute_reply.started":"2024-04-09T15:05:19.483275Z","shell.execute_reply":"2024-04-09T15:05:19.508861Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"FAMD_data = songs_df[[i for i in songs_df.columns[2:]]]\n\nfamd = prince.FAMD(n_components = 10, n_iter = 10, random_state = 505);\nfamd = famd.fit(FAMD_data);\nfamd.column_coordinates_","metadata":{"execution":{"iopub.status.busy":"2024-04-09T15:05:19.512324Z","iopub.execute_input":"2024-04-09T15:05:19.512821Z","iopub.status.idle":"2024-04-09T15:05:20.277624Z","shell.execute_reply.started":"2024-04-09T15:05:19.512778Z","shell.execute_reply":"2024-04-09T15:05:20.276554Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"n_clusters = 5\nclustering_data = famd.row_coordinates(FAMD_data).copy()\nc_d_w_c = songs_df[[i for i in songs_df.columns[:-1]]]\n\nkmeans = KMeans(n_clusters=n_clusters, random_state=505, n_init=\"auto\")\nkmeans.fit(clustering_data)\n\nc_d_w_c['cluster'] = kmeans.labels_\nclustering_data['cluster'] = kmeans.labels_","metadata":{"execution":{"iopub.status.busy":"2024-04-09T15:05:20.279194Z","iopub.execute_input":"2024-04-09T15:05:20.279792Z","iopub.status.idle":"2024-04-09T15:05:20.463983Z","shell.execute_reply.started":"2024-04-09T15:05:20.279756Z","shell.execute_reply":"2024-04-09T15:05:20.462833Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"name_col = ['track_name', 'artist(s)_name']\ncategory_col = ['artist_count', 'bpm', 'key', 'mode']\ndate_col = ['released_year', 'released_month', 'released_day']\nin_and_str_col = ['in_spotify_playlists', 'in_spotify_charts', 'streams',\n                  'in_apple_playlists', 'in_apple_charts', 'in_deezer_playlists', \n                  'in_deezer_charts', 'in_shazam_charts']\npersent_char = ['danceability_%', 'valence_%', 'energy_%', 'acousticness_%',\n                'instrumentalness_%', 'liveness_%', 'speechiness_%']","metadata":{"execution":{"iopub.status.busy":"2024-04-09T15:05:20.465829Z","iopub.execute_input":"2024-04-09T15:05:20.466717Z","iopub.status.idle":"2024-04-09T15:05:20.473941Z","shell.execute_reply.started":"2024-04-09T15:05:20.466678Z","shell.execute_reply":"2024-04-09T15:05:20.472721Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"sns.pairplot(clustering_data,  hue=\"cluster\", palette=\"icefire\")","metadata":{"execution":{"iopub.status.busy":"2024-04-09T15:05:20.47815Z","iopub.execute_input":"2024-04-09T15:05:20.479559Z","iopub.status.idle":"2024-04-09T15:06:31.831282Z","shell.execute_reply.started":"2024-04-09T15:05:20.479497Z","shell.execute_reply":"2024-04-09T15:06:31.829785Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"sns.pairplot(c_d_w_c[in_and_str_col+[\"cluster\"]],  hue=\"cluster\", palette=\"icefire\")","metadata":{"execution":{"iopub.status.busy":"2024-04-09T15:06:31.833305Z","iopub.execute_input":"2024-04-09T15:06:31.833776Z","iopub.status.idle":"2024-04-09T15:07:19.412148Z","shell.execute_reply.started":"2024-04-09T15:06:31.83372Z","shell.execute_reply":"2024-04-09T15:07:19.409423Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"sns.pairplot(c_d_w_c[persent_char+[\"cluster\"]],  hue=\"cluster\", palette=\"icefire\")","metadata":{"execution":{"iopub.status.busy":"2024-04-09T15:07:19.414412Z","iopub.execute_input":"2024-04-09T15:07:19.414901Z","iopub.status.idle":"2024-04-09T15:07:56.313201Z","shell.execute_reply.started":"2024-04-09T15:07:19.41486Z","shell.execute_reply":"2024-04-09T15:07:56.311799Z"},"trusted":true},"execution_count":null,"outputs":[]}]}